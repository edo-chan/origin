version: '3.8'

services:
  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: template
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/template
      - SERVER_ADDR=[::0]:50051
    networks:
      - app-network

  envoy:
    hostname: envoy
    build:
      context: ./backend/envoy
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "9901:9901"
    depends_on:
      - backend
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - envoy
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://envoy:8080
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
