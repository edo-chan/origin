{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(cargo check:*)",
      "Bash(npm run build:*)",
      "Bash(npm run:*)",
      "Bash(npm install)",
      "Bash(find:*)",
      "Bash(cargo:*)",
      "Bash(docker compose:*)",
      "Bash(protoc:*)",
      "Bash(docker-compose up:*)",
      "Bash(docker-compose:*)",
      "Bash(curl:*)",
      "Bash(ls:*)",
      "Bash(docker logs:*)",
      "Bash(mkdir:*)",
      "Bash(npx:*)",
      "Bash(node_modules/.bin/playwright test:*)",
      "Bash(./node_modules/.bin/playwright test:*)",
      "Bash(timeout 60 npm run test:e2e:*)",
      "Bash(git checkout:*)",
      "Bash(docker system prune:*)",
      "Bash(docker network:*)",
      "Bash(docker rm:*)",
      "Bash(true)",
      "Bash(brew:*)",
      "Bash(/opt/homebrew/Cellar/postgresql@16/16.4_3/bin/psql -d postgres -c \"\\du\")",
      "Bash(/opt/homebrew/Cellar/postgresql@16/16.4_3/bin/createdb template)",
      "Bash(git stash:*)",
      "Bash(npm install:*)",
      "Bash(npm uninstall:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(touch:*)",
      "Bash(timeout 10s npm run storybook:*)",
      "Bash(timeout:*)",
      "Bash(npm view:*)",
      "Bash(tilt get:*)",
      "Bash(tilt describe:*)",
      "Bash(kubectl get:*)",
      "Bash(tilt trigger:*)",
      "Bash(tilt status:*)",
      "Bash(tilt up:*)",
      "Bash(tilt log:*)",
      "Bash(cp:*)",
      "Bash(pkill:*)",
      "Bash(grep:*)",
      "Bash(npm cache clean:*)",
      "Bash(linear issue list:*)",
      "WebFetch(domain:mcp.linear.app)",
      "WebFetch(domain:linear.app)",
      "Bash(claude mcp:*)",
      "mcp__linear__list_teams",
      "mcp__linear__create_issue",
      "mcp__linear__list_issue_labels",
      "mcp__linear__list_issue_statuses",
      "Bash(sqlx migrate:*)",
      "Bash(chmod:*)",
      "Bash(rustc:*)",
      "Bash(time cargo build:*)",
      "Bash(SKIP_ENV_VALIDATION=true npm run build -- --no-lint)",
      "Bash(time cargo check)",
      "mcp__linear__list_issues",
      "mcp__linear__update_issue",
      "Bash(CARGO_MANIFEST_DIR=/Users/edwardchan/dev/origin/backend rust-gdb --batch --quiet -ex \"source ./build.rs\")",
      "Bash(DOCKER_BUILDKIT=1 docker build --target planner -t test-planner .)",
      "Bash(DOCKER_BUILDKIT=1 docker build --target planner -f backend/Dockerfile -t test-planner .)",
      "Bash(./backend/build-optimized.sh:*)",
      "Bash(sed:*)",
      "Bash(DOCKER_BUILDKIT=1 docker build --target deps -f backend/Dockerfile -t test-deps .)",
      "Bash(DOCKER_BUILDKIT=1 docker build -f backend/Dockerfile -t template-backend-optimized:latest .)",
      "Bash(docker run:*)",
      "Bash(openssl rand:*)",
      "Bash(aws configure:*)",
      "Bash(aws sts:*)",
      "Bash(export AWS_PROFILE=personal)",
      "Bash(pulumi config set:*)",
      "Bash(AWS_PROFILE=personal aws sts get-caller-identity)",
      "Bash(AWS_PROFILE=personal pulumi stack init dev)",
      "Bash(AWS_PROFILE=personal pulumi config set domain example.com)",
      "Bash(AWS_PROFILE=personal pulumi preview)",
      "Bash(AWS_PROFILE=personal pulumi plugin install resource aws v6.0.0)",
      "Bash(AWS_PROFILE=personal pulumi plugin ls)",
      "Bash(AWS_PROFILE=personal pulumi plugin install resource aws)",
      "Bash(AWS_PROFILE=personal go mod tidy)",
      "Bash(AWS_PROFILE=personal pulumi up --yes)",
      "Bash(AWS_PROFILE=personal pulumi status)",
      "Bash(AWS_PROFILE=personal pulumi state)",
      "Bash(AWS_PROFILE=personal pulumi stack --show-urns)",
      "Bash(RUST_LOG=info cargo run)",
      "WebFetch(domain:docs.rs)",
      "Bash(AWS_PROFILE=personal pulumi config get environment)",
      "WebFetch(domain:github.com)",
      "Bash(AWS_PROFILE=personal pulumi config set environment local)",
      "Bash(AWS_PROFILE=personal aws ssm get-parameters --names \"/origin/local/database-url\" \"/origin/local/redis-url\" \"/origin/local/jwt-secret\" \"/origin/local/claude-api-key\" --with-decryption)",
      "Bash(git push:*)"
    ],
    "deny": []
  }
}