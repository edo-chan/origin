"use strict";(self.webpackChunktemplate_frontend=self.webpackChunktemplate_frontend||[]).push([[471],{"./src/stories/Switch.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:()=>Controlled,Default:()=>Default,Disabled:()=>Disabled,Sizes:()=>Sizes,Variants:()=>Variants,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/index.ts"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Switch",component:_components__WEBPACK_IMPORTED_MODULE_1__.rs,parameters:{layout:"padded"},argTypes:{size:{control:{type:"select"},options:["sm","md","lg"]},variant:{control:{type:"select"},options:["primary","secondary","tertiary"]},disabled:{control:{type:"boolean"}},checked:{control:{type:"boolean"}},label:{control:{type:"text"}}}},Default={args:{size:"md",variant:"primary",label:"Enable notifications"},render:args=>{const[checked,setChecked]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.rs,{...args,checked,onCheckedChange:setChecked})}},Controlled={render:()=>{const[notifications,setNotifications]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1),[darkMode,setDarkMode]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!0),[autoSave,setAutoSave]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.rs,{variant:"primary",size:"md",label:"Enable notifications",checked:notifications,onCheckedChange:setNotifications}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.rs,{variant:"secondary",size:"md",label:"Dark mode",checked:darkMode,onCheckedChange:setDarkMode}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.rs,{variant:"tertiary",size:"md",label:"Auto-save documents",checked:autoSave,onCheckedChange:setAutoSave}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{marginTop:"16px",padding:"16px",backgroundColor:"#f5f5f5",borderRadius:"8px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("strong",{children:"Current state:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ul",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:["Notifications: ",notifications?"ON":"OFF"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:["Dark mode: ",darkMode?"ON":"OFF"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:["Auto-save: ",autoSave?"ON":"OFF"]})]})]})]})}},Sizes={render:()=>{const[smallChecked,setSmallChecked]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1),[mediumChecked,setMediumChecked]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!0),[largeChecked,setLargeChecked]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.rs,{variant:"primary",size:"sm",label:"Small switch",checked:smallChecked,onCheckedChange:setSmallChecked}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.rs,{variant:"primary",size:"md",label:"Medium switch",checked:mediumChecked,onCheckedChange:setMediumChecked}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.rs,{variant:"primary",size:"lg",label:"Large switch",checked:largeChecked,onCheckedChange:setLargeChecked})]})}},Variants={render:()=>{const[primaryChecked,setPrimaryChecked]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!0),[secondaryChecked,setSecondaryChecked]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!0),[tertiaryChecked,setTertiaryChecked]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!0);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.rs,{variant:"primary",size:"md",label:"Primary variant",checked:primaryChecked,onCheckedChange:setPrimaryChecked}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.rs,{variant:"secondary",size:"md",label:"Secondary variant",checked:secondaryChecked,onCheckedChange:setSecondaryChecked}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.rs,{variant:"tertiary",size:"md",label:"Tertiary variant",checked:tertiaryChecked,onCheckedChange:setTertiaryChecked})]})}},Disabled={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"16px"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.rs,{variant:"primary",size:"md",label:"Disabled (unchecked)",checked:!1,disabled:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.rs,{variant:"primary",size:"md",label:"Disabled (checked)",checked:!0,disabled:!0})]})},__namedExportsOrder=["Default","Controlled","Sizes","Variants","Disabled"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'md',\n    variant: 'primary',\n    label: 'Enable notifications'\n  },\n  render: args => {\n    const [checked, setChecked] = useState(false);\n    return <Switch {...args} checked={checked} onCheckedChange={setChecked} />;\n  }\n}",...Default.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const [notifications, setNotifications] = useState(false);\n    const [darkMode, setDarkMode] = useState(true);\n    const [autoSave, setAutoSave] = useState(false);\n    return <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '16px'\n    }}>\n        <Switch variant=\"primary\" size=\"md\" label=\"Enable notifications\" checked={notifications} onCheckedChange={setNotifications} />\n        <Switch variant=\"secondary\" size=\"md\" label=\"Dark mode\" checked={darkMode} onCheckedChange={setDarkMode} />\n        <Switch variant=\"tertiary\" size=\"md\" label=\"Auto-save documents\" checked={autoSave} onCheckedChange={setAutoSave} />\n        \n        <div style={{\n        marginTop: '16px',\n        padding: '16px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      }}>\n          <strong>Current state:</strong>\n          <ul>\n            <li>Notifications: {notifications ? 'ON' : 'OFF'}</li>\n            <li>Dark mode: {darkMode ? 'ON' : 'OFF'}</li>\n            <li>Auto-save: {autoSave ? 'ON' : 'OFF'}</li>\n          </ul>\n        </div>\n      </div>;\n  }\n}",...Controlled.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [smallChecked, setSmallChecked] = useState(false);\n    const [mediumChecked, setMediumChecked] = useState(true);\n    const [largeChecked, setLargeChecked] = useState(false);\n    return <div style={{\n      display: \'flex\',\n      flexDirection: \'column\',\n      gap: \'16px\'\n    }}>\n        <Switch variant="primary" size="sm" label="Small switch" checked={smallChecked} onCheckedChange={setSmallChecked} />\n        <Switch variant="primary" size="md" label="Medium switch" checked={mediumChecked} onCheckedChange={setMediumChecked} />\n        <Switch variant="primary" size="lg" label="Large switch" checked={largeChecked} onCheckedChange={setLargeChecked} />\n      </div>;\n  }\n}',...Sizes.parameters?.docs?.source}}},Variants.parameters={...Variants.parameters,docs:{...Variants.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [primaryChecked, setPrimaryChecked] = useState(true);\n    const [secondaryChecked, setSecondaryChecked] = useState(true);\n    const [tertiaryChecked, setTertiaryChecked] = useState(true);\n    return <div style={{\n      display: \'flex\',\n      flexDirection: \'column\',\n      gap: \'16px\'\n    }}>\n        <Switch variant="primary" size="md" label="Primary variant" checked={primaryChecked} onCheckedChange={setPrimaryChecked} />\n        <Switch variant="secondary" size="md" label="Secondary variant" checked={secondaryChecked} onCheckedChange={setSecondaryChecked} />\n        <Switch variant="tertiary" size="md" label="Tertiary variant" checked={tertiaryChecked} onCheckedChange={setTertiaryChecked} />\n      </div>;\n  }\n}',...Variants.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    display: \'flex\',\n    flexDirection: \'column\',\n    gap: \'16px\'\n  }}>\n      <Switch variant="primary" size="md" label="Disabled (unchecked)" checked={false} disabled={true} />\n      <Switch variant="primary" size="md" label="Disabled (checked)" checked={true} disabled={true} />\n    </div>\n}',...Disabled.parameters?.docs?.source}}}}}]);