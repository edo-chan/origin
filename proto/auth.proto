syntax = "proto3";
package auth;

import "google/api/annotations.proto";

// Authentication service definition - OTP only
service AuthService {
  // Request an OTP for login
  rpc RequestOtp(RequestOtpRequest) returns (RequestOtpResponse) {
    option (google.api.http) = {
      post: "/v1/auth/request-otp"
      body: "*"
    };
  }

  // Verify OTP and get tokens
  rpc VerifyOtp(VerifyOtpRequest) returns (AuthResponse) {
    option (google.api.http) = {
      post: "/v1/auth/verify-otp"
      body: "*"
    };
  }

  // Refresh access token
  rpc RefreshToken(RefreshTokenRequest) returns (AuthResponse) {
    option (google.api.http) = {
      post: "/v1/auth/refresh"
      body: "*"
    };
  }

  // Logout user
  rpc LogoutUser(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post: "/v1/auth/logout"
      body: "*"
    };
  }

  // Get current user info
  rpc GetCurrentUser(GetCurrentUserRequest) returns (UserResponse) {
    option (google.api.http) = {
      get: "/v1/auth/me"
    };
  }
}

// Request OTP for email
message RequestOtpRequest {
  string email = 1;
}

message RequestOtpResponse {
  bool success = 1;
  string message = 2;
}

// Verify OTP code
message VerifyOtpRequest {
  string email = 1;
  string code = 2;
}

// Refresh token request
message RefreshTokenRequest {
  string refresh_token = 1;
}

// Logout request
message LogoutRequest {
  string access_token = 1;
}

message LogoutResponse {
  bool success = 1;
  string message = 2;
}

// Get current user request
message GetCurrentUserRequest {
  string access_token = 1;
}

// Authentication response with tokens
message AuthResponse {
  string access_token = 1;
  string refresh_token = 2;
  User user = 3;
}

// User response
message UserResponse {
  User user = 1;
}

// User model
message User {
  string id = 1;
  string email = 2;
  string full_name = 3;
  string created_at = 4; // ISO 8601 timestamp string
}

